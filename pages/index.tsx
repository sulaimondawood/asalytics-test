import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";

//interface
import { IResult } from "../typescript-types";
import Header from "../components/header/Header";

const client = new ApolloClient({
  cache: new InMemoryCache(),
  uri: "https://analytics-api.herokuapp.com/analytics",
});

const Home: NextPage<IResult[]> = ({ asa }) => {
  console.log(asa);

  return (
    <div>
      <Head>
        <title>Asalytics Assesment</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.container}>
        <Header />
        <h1 className={styles.title}>
          List of Algorand Standard Assets on ASAlytics
        </h1>
        <div className={styles.data}>
          {asa.map((data: IResult) => {
            const { assetId, available, logo, name } = data;
            return (
              <div key={assetId} className={styles.item}>
                <img className={styles.logo} src={logo} alt="" />
                <p>{name}</p>
                <p
                  className={available ? styles.available : styles.unavailable}
                >
                  {available ? "available" : "Unavailable"}
                </p>
              </div>
            );
          })}
        </div>
      </div>
      {/* <h1>Dawood</h1> */}
    </div>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async () => {
  const { data } = await client.query({
    query: gql`
      query MyQuery {
        asalist {
          results {
            assetId
            available
            logo
            name
          }
        }
      }
    `,
  });
  return {
    props: {
      asa: data.asalist.results,
    },
  };
};
